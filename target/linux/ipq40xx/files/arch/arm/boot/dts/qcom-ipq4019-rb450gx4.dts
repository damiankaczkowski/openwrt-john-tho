// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
/* Copyright (c) 2019, Robert Marko <robimarko@gmail.com> */

#include "qcom-ipq4019-mikrotik_nor.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/soc/qcom,tcsr.h>

/ {
	model = "MikroTik RouterBOARD RB450Gx4";
	compatible = "mikrotik,rb450gx4";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x40000000>;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	aliases {
		led-boot = &led_user;
		led-failsafe = &led_user;
		led-running = &led_user;
		led-upgrade = &led_user;
	};

	soc {
		rng@22000 {
			status = "okay";
		};

		counter@4a1000 {
			compatible = "qcom,qca-gcnt";
			reg = <0x4a1000 0x4>;
		};

		tcsr@1949000 {
			compatible = "qcom,tcsr";
			reg = <0x1949000 0x100>;
			qcom,wifi_glb_cfg = <TCSR_WIFI_GLB_CFG>;
		};

		tcsr@194b000 {
			status = "okay";

			compatible = "qcom,tcsr";
			reg = <0x194b000 0x100>;
			qcom,usb-hsphy-mode-select = <TCSR_USB_HSPHY_HOST_MODE>;
		};

		ess_tcsr@1953000 {
			compatible = "qcom,tcsr";
			reg = <0x1953000 0x1000>;
			qcom,ess-interface-select = <TCSR_ESS_PSGMII>;
		};

		tcsr@1957000 {
			compatible = "qcom,tcsr";
			reg = <0x1957000 0x100>;
			qcom,wifi_noc_memtype_m0_m2 = <TCSR_WIFI_NOC_MEMTYPE_M0_M2>;
		};

		crypto@8e3a000 {
			status = "okay";
		};

		watchdog@b017000 {
			status = "okay";
		};
	};

	keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&tlmm 5 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_RESTART>;
		};
	};

	leds {
		compatible = "gpio-leds";

		power {
			label = "blue:power";
			gpios = <&tlmm 0 GPIO_ACTIVE_HIGH>;
			default-state = "keep";
			panic-indicator;
		};

		led_user: user {
			label = "green:user";
			gpios = <&tlmm 3 GPIO_ACTIVE_HIGH>;
		};
	};

	gpio_export {
		compatible = "gpio-export";
		#size-cells = <0>;

		buzzer {
			/* Beeper requires PWM for frequency selection */
			gpio-export,name = "buzzer";
			gpio-export,output = <0>;
			gpios = <&tlmm 2 GPIO_ACTIVE_HIGH>;
		};
	};

	/*
	* gpio41 input port5 passive PoE goes low when unpowered passive PoE device present
	* gpio42 output port5 passive PoE powers when high
	*/

};

&vqmmc {
	status = "okay";
};

&sdhci {
	status = "okay";

	pinctrl-0 = <&sd_pins>;
	pinctrl-names = "default";
	cd-gpios = <&tlmm 22 GPIO_ACTIVE_LOW>;
	vqmmc-supply = <&vqmmc>;
};

&qpic_bam {
	status = "okay";
};

&tlmm {
	serial_pins: serial_pinmux {
		pins = "gpio16", "gpio17";
		function = "blsp_uart0";
		bias-disable;
	};

	spi_0_pins: spi_0_pinmux {
		pinmux {
			function = "blsp_spi0";
			pins = "gpio13", "gpio14", "gpio15";
			drive-strength = <12>;
			bias-disable;
		};

		pinmux_cs {
			function = "gpio";
			pins = "gpio12";
			drive-strength = <2>;
			bias-disable;
			output-high;
		};

		pinmux_cs_ts {
			function = "gpio";
			pins = "gpio34";
			drive-strength = <2>;
			bias-disable;
			output-high;
		};
	};

	nand_pins: nand_pins {
		pins = "gpio53", "gpio55", "gpio56",
			"gpio57", "gpio58", "gpio59",
			"gpio60", "gpio62", "gpio63",
			"gpio64", "gpio65", "gpio66",
			"gpio67", "gpio68", "gpio69";
		function = "qpic";
	};

	sd_pins: sd_pins {
		pinmux {
			function = "sdio";
			pins = "gpio23", "gpio24", "gpio25", "gpio26",
				"gpio28", "gpio29", "gpio30", "gpio31";
			drive-strength = <10>;
		};

		pinmux_sd_clk {
			function = "sdio";
			pins = "gpio27";
			drive-strength = <16>;
		};

		pinmux_sd7 {
			function = "sdio";
			pins = "gpio32";
			drive-strength = <10>;
			bias-disable;
		};
	};
};

&blsp_dma {
	status = "okay";
};

&blsp1_spi1 {
	status = "okay";

	pinctrl-0 = <&spi_0_pins>;
	pinctrl-names = "default";
	cs-gpios = <&tlmm 12 GPIO_ACTIVE_LOW>, <&tlmm 34 GPIO_ACTIVE_LOW>;
};

&flash0 {
	/* any faster and get SPI timeouts reading NOR */
	spi-max-frequency = <24000000>;
};

&nand {
	status = "okay";

	pinctrl-0 = <&nand_pins>;
	pinctrl-names = "default";

	nand@0 {
		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				label = "kernel";
				reg = <0x000000 0x800000>;
			};

			partition@800000 {
				label = "ubi";
				reg = <0x800000 0x1f800000>;
			};
		};
	};
};

&blsp1_uart1 {
	status = "okay";

	pinctrl-0 = <&serial_pins>;
	pinctrl-names = "default";
};

&cryptobam {
	status = "okay";
};

&mdio {
	status = "okay";

	// Mikrotik rb450gx4 uses offset +0x18 MDIO regs for _some_ reason
	ethphy18: ethernet-phy@18 {
		reg = <0x18>;
	};

	ethphy19: ethernet-phy@19 {
		reg = <0x19>;
	};

	ethphy1a: ethernet-phy@1a {
		reg = <0x1a>;
	};

	ethphy1b: ethernet-phy@1b {
		reg = <0x1b>;
	};

	ethphy1c: ethernet-phy@1c {
		reg = <0x1c>;
	};

	psgmiiphy1d: psgmii-phy@1d {
		reg = <0x1d>;
		qcom,tx-driver-strength = <PSGMII_QSGMII_TX_DRIVER_300MV>;
	};
};

&gmac {
	status = "okay";
};

&switch {
	status = "okay";

	psgmii-ethphy = <&psgmiiphy1d>;
};

&swport1 {
	status = "okay";

	phy-handle = <&ethphy18>;
	label = "ether1";
};

&swport2 {
	status = "okay";

	phy-handle = <&ethphy19>;
	label = "ether2";
};

&swport3 {
	status = "okay";

	phy-handle = <&ethphy1a>;
	label = "ether3";
};

&swport4 {
	status = "okay";

	phy-handle = <&ethphy1b>;
	label = "ether4";
};

&swport5 {
	status = "okay";

	phy-handle = <&ethphy1c>;
	label = "ether5";
};
